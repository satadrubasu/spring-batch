#Spring Batch ( Batch Properties )

#spring.batch.initializer.enabled= # Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.
#spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.
#spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.
#spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.
#----------------------------------------------------#
spring.batch.initializer.enabled=true
spring.batch.job.enabled=false

# add mssql server dependency in pom - recently made available on maven repos

spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=myappdb;integratedSecurity=false;
spring.datasource.username=dbuser
spring.datasource.password=dbuser
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Check Prefixed properties and used in databaseJob
dbReadWrite.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=myappdb;integratedSecurity=false;

dbReadWrite.datasource.username=dbuser
dbReadWrite.datasource.password=dbuser
dbReadWrite.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

